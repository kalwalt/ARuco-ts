!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var o in r)("object"==typeof exports?exports:t)[o]=r[o]}}(this,(()=>(()=>{"use strict";var t,e,r={d:(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};r.r(o),r.d(o,{ARuco:()=>e,CV:()=>t});class i{width;height;data;constructor(t=0,e=0,r=[]){this.width=t,this.height=e,this.data=r}}class n{color;next;constructor(){this.color=0,this.next=null}}class s{static grayscale(t){let e=t.data,r=[],o=new i,n=e.length,s=0,a=0;for(;s<n;s+=4)r[a++]=.299*e[s]+.587*e[s+1]+.114*e[s+2]+.5&255;return o.width=t.width,o.height=t.height,o.data=r,o}static threshold(t,e,r){let o,i=t.data,n=e.data,s=i.length,a=[];for(o=0;o<256;++o)a[o]=o<=r?0:255;for(o=0;o<s;++o)n[o]=a[i[o]];return e.width=t.width,e.height=t.height,e}static adaptiveThreshold(t,e,r,o){let i,n=t.data,a=e.data,h=n.length,d=[];for(s.stackBoxBlur(t,e,r),i=0;i<768;++i)d[i]=i-255<=-o?255:0;for(i=0;i<h;++i)a[i]=d[n[i]-a[i]+255];return e.width=t.width,e.height=t.height,e}static otsu(t){let e,r,o,i=t.data,n=i.length,s=[],a=0,h=0,d=0,l=0,x=0,u=0;for(o=0;o<256;++o)s[o]=0;for(o=0;o<n;++o)s[i[o]]++;for(o=0;o<256;++o)h+=s[o]*o;for(o=0;o<256;++o)if(l+=s[o],0!==l){if(x=n-l,0===x)break;d+=s[o]*o,e=d/l-(h-d)/x,r=l*x*e*e,r>u&&(u=r,a=o)}return a}static stackBoxBlurMult=[1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265];static stackBoxBlurShift=[0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13];static stackBoxBlur(t,e,r){let o,i,a,h,d,l,x,u,c,f,g=t.data,y=e.data,p=t.height,_=t.width,w=p-1,m=_-1,b=r+r+1,B=r+1,v=s.stackBoxBlurMult[r],k=s.stackBoxBlurShift[r];for(o=i=new n,f=1;f<b;++f)o=o.next=new n;for(o.next=i,d=0,c=0;c<p;++c){for(l=d,a=g[d],h=B*a,o=i,f=0;f<B;++f)o.color=a,o=o.next;for(f=1;f<B;++f)o.color=g[d+f],h+=o.color,o=o.next;for(o=i,u=0;u<_;++u)y[d++]=h*v>>>k,x=u+B,x=l+(x<m?x:m),h-=o.color-g[x],o.color=g[x],o=o.next}for(u=0;u<_;++u){for(d=u,l=d+_,a=y[d],h=B*a,o=i,f=0;f<B;++f)o.color=a,o=o.next;for(f=1;f<B;++f)o.color=y[l],h+=o.color,o=o.next,l+=_;for(o=i,c=0;c<p;++c)y[d]=h*v>>>k,x=c+B,x=u+(x<w?x:w)*_,h-=o.color-y[x],o.color=y[x],o=o.next,d+=_}return e}static gaussianBlur(t,e,r,o){var i=s.gaussianKernel(o);return e.width=t.width,e.height=t.height,r.width=t.width,r.height=t.height,s.gaussianBlurFilter(t,r,i,!0),s.gaussianBlurFilter(r,e,i,!1),e}static gaussianBlurFilter(t,e,r,o){let i,n,s,a,h,d=t.data,l=e.data,x=t.height,u=t.width,c=0,f=r.length>>1;for(s=0;s<x;++s)for(a=0;a<u;++a){for(n=0,h=-f;h<=f;++h)o?(i=c+h,(a+h<0||a+h>=u)&&(i=c)):(i=c+h*u,(s+h<0||s+h>=x)&&(i=c)),n+=r[f+h]*d[i];l[c++]=o?n:n+.5&255}return e}static gaussianKernel(t){let e,r,o,i,n,s,a=[];if(t<=7&&t%2==1)a=[[1],[.25,.5,.25],[.0625,.25,.375,.25,.0625],[.03125,.109375,.21875,.28125,.21875,.109375,.03125]][t>>1];else{for(e=.5*(t-1),r=.8+.3*(e-1),o=-.5/(r*r),i=0,s=0;s<t;++s)n=s-e,i+=a[s]=Math.exp(o*n*n);for(i=1/i,s=0;s<t;++s)a[s]*=i}return a}static findContours(t,e){let r,o,i,n,a,h,d,l,x,u=t.width,c=t.height,f=[];for(r=s.binaryBorder(t,e),o=s.neighborhoodDeltas(u+2),i=u+3,a=1,l=0;l<c;++l,i+=2)for(x=0;x<u;++x,++i)n=r[i],0!==n&&(h=d=!1,1===n&&0===r[i-1]?h=!0:n>=1&&0===r[i+1]&&(d=!0),(h||d)&&(++a,f.push(s.borderFollowing(r,i,a,{x,y:l},d,o))));return f}static borderFollowing(t,e,r,o,i,n){let a,h,d,l,x,u,c=[];c.hole=i,l=x=i?0:4;do{if(l=l-1&7,a=e+n[l],0!==t[a])break}while(l!==x);if(l===x)t[e]=-r,c.push({x:o.x,y:o.y});else for(h=e,u=4^l;;){x=l;do{d=h+n[++l]}while(0===t[d]);if(l&=7,l-1>>>0<x>>>0?t[h]=-r:1===t[h]&&(t[h]=r),c.push({x:o.x,y:o.y}),u=l,o.x+=s.neighborhood[l][0],o.y+=s.neighborhood[l][1],d===e&&h===a)break;h=d,l=l+4&7}return c}static neighborhood=[[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1],[0,1],[1,1]];static neighborhoodDeltas(t){let e=[],r=s.neighborhood.length,o=0;for(;o<r;++o)e[o]=s.neighborhood[o][0]+s.neighborhood[o][1]*t;return e.concat(e)}static approxPolyDP(t,e){let r,o,i,n,s,a,h,d,l,x,u,c={start_index:0,end_index:0},f={start_index:0,end_index:0},g=[],y=[],p=t.length;for(e*=e,u=0,l=0;l<3;++l)for(s=0,u=(u+f.start_index)%p,o=t[u],++u===p&&(u=0),x=1;x<p;++x)r=t[u],++u===p&&(u=0),h=r.x-o.x,d=r.y-o.y,n=h*h+d*d,n>s&&(s=n,f.start_index=x);for(s<=e?g.push({x:o.x,y:o.y}):(c.start_index=u,c.end_index=f.start_index+=c.start_index,f.start_index-=f.start_index>=p?p:0,f.end_index=c.start_index,f.end_index<f.start_index&&(f.end_index+=p),y.push({start_index:f.start_index,end_index:f.end_index}),y.push({start_index:c.start_index,end_index:c.end_index}));0!==y.length;){if(c=y.pop(),i=t[c.end_index%p],o=t[u=c.start_index%p],++u===p&&(u=0),c.end_index<=c.start_index+1)a=!0;else{for(s=0,h=i.x-o.x,d=i.y-o.y,l=c.start_index+1;l<c.end_index;++l)r=t[u],++u===p&&(u=0),n=Math.abs((r.y-o.y)*h-(r.x-o.x)*d),n>s&&(s=n,f.start_index=l);a=s*s<=e*(h*h+d*d)}a?g.push({x:o.x,y:o.y}):(f.end_index=c.end_index,c.end_index=f.start_index,y.push({start_index:f.start_index,end_index:f.end_index}),y.push({start_index:c.start_index,end_index:c.end_index}))}return g}static warp(t,e,r,o){let i,n,a,h,d,l,x,u,c,f,g,y,p,_,w,m,b,B,v,k,C,P,M,T=t.data,D=e.data,N=t.width,j=t.height,S=0;for(p=s.getPerspectiveTransform(r,o-1),_=p[8],w=p[2],m=p[5],P=0;P<o;++P)for(_+=p[7],w+=p[1],m+=p[4],b=_,B=w,v=m,M=0;M<o;++M)b+=p[6],B+=p[0],v+=p[3],k=B/b,C=v/b,i=k>>>0,n=i===N-1?i:i+1,a=k-i,h=1-a,d=C>>>0,l=d===j-1?d:d+1,x=C-d,u=1-x,c=f=d*N,g=y=l*N,D[S++]=u*(h*T[c+i]+a*T[f+n])+x*(h*T[g+i]+a*T[y+n])&255;return e.width=o,e.height=o,e}static getPerspectiveTransform(t,e){let r=s.square2quad(t);return r[0]/=e,r[1]/=e,r[3]/=e,r[4]/=e,r[6]/=e,r[7]/=e,r}static square2quad(t){let e,r,o,i,n,s,a,h=[];return e=t[0].x-t[1].x+t[2].x-t[3].x,r=t[0].y-t[1].y+t[2].y-t[3].y,0===e&&0===r?(h[0]=t[1].x-t[0].x,h[1]=t[2].x-t[1].x,h[2]=t[0].x,h[3]=t[1].y-t[0].y,h[4]=t[2].y-t[1].y,h[5]=t[0].y,h[6]=0,h[7]=0,h[8]=1):(o=t[1].x-t[2].x,i=t[3].x-t[2].x,n=t[1].y-t[2].y,s=t[3].y-t[2].y,a=o*s-i*n,h[6]=(e*s-i*r)/a,h[7]=(o*r-e*n)/a,h[8]=1,h[0]=t[1].x-t[0].x+h[6]*t[1].x,h[1]=t[3].x-t[0].x+h[7]*t[3].x,h[2]=t[0].x,h[3]=t[1].y-t[0].y+h[6]*t[1].y,h[4]=t[3].y-t[0].y+h[7]*t[3].y,h[5]=t[0].y),h}static isContourConvex(t){let e,r,o,i,n,s,a,h,d=0,l=!0,x=t.length,u=0,c=0;for(r=t[x-1],e=t[0],n=e.x-r.x,s=e.y-r.y;u<x;++u){if(++c===x&&(c=0),r=e,e=t[c],a=e.x-r.x,h=e.y-r.y,o=a*s,i=h*n,d|=i>o?1:i<o?2:3,3===d){l=!1;break}n=a,s=h}return l}static perimeter(t){let e,r,o=t.length,i=0,n=o-1,s=0;for(;i<o;n=i++)e=t[i].x-t[n].x,r=t[i].y-t[n].y,s+=Math.sqrt(e*e+r*r);return s}static minEdgeLength(t){let e,r,o,i=t.length,n=0,s=i-1,a=1/0;for(;n<i;s=n++)r=t[n].x-t[s].x,o=t[n].y-t[s].y,e=r*r+o*o,e<a&&(a=e);return Math.sqrt(a)}static countNonZero(t,e){let r,o,i=t.data,n=e.height,s=e.width,a=e.x+e.y*t.width,h=t.width-s,d=0;for(r=0;r<n;++r){for(o=0;o<s;++o)0!==i[a++]&&++d;a+=h}return d}static binaryBorder(t,e){let r,o,i=t.data,n=t.height,s=t.width,a=0,h=0;for(o=-2;o<s;++o)e[h++]=0;for(r=0;r<n;++r){for(e[h++]=0,o=0;o<s;++o)e[h++]=0===i[a++]?0:1;e[h++]=0}for(o=-2;o<s;++o)e[h++]=0;return e}}class a{id;corners;constructor(t,e){this.id=t,this.corners=e}}class h{grey;thres;homography;binary;contours;polys;candidates;constructor(){this.grey=new i,this.thres=new i,this.homography=new i,this.binary=[],this.contours=[],this.polys=[],this.candidates=[]}detect(t){return this.grey=s.grayscale(t),s.adaptiveThreshold(this.grey,this.thres,2,7),this.contours=s.findContours(this.thres,this.binary),this.candidates=this.findCandidates(this.contours,.2*t.width,.05,10),this.candidates=this.clockwiseCorners(this.candidates),this.candidates=this.notTooNear(this.candidates,10),this.findMarkers(this.grey,this.candidates,49)}findCandidates(t,e,r,o){let i,n,a,h=[],d=t.length;for(this.polys=[],a=0;a<d;++a)i=t[a],i.length>=e&&(n=s.approxPolyDP(i,i.length*r),this.polys.push(n),4===n.length&&s.isContourConvex(n)&&s.minEdgeLength(n)>=o&&h.push(n));return h}clockwiseCorners(t){let e,r,o,i,n,s,a=t.length;for(s=0;s<a;++s)e=t[s][1].x-t[s][0].x,o=t[s][1].y-t[s][0].y,r=t[s][2].x-t[s][0].x,i=t[s][2].y-t[s][0].y,e*i-o*r<0&&(n=t[s][1],t[s][1]=t[s][3],t[s][3]=n);return t}notTooNear(t,e){let r,o,i,n,a,h,d=[],l=t.length;for(n=0;n<l;++n)for(a=n+1;a<l;++a){for(r=0,h=0;h<4;++h)o=t[n][h].x-t[a][h].x,i=t[n][h].y-t[a][h].y,r+=o*o+i*i;r/4<e*e&&(s.perimeter(t[n])<s.perimeter(t[a])?t[n].tooNear=!0:t[a].tooNear=!0)}for(n=0;n<l;++n)t[n].tooNear||d.push(t[n]);return d}findMarkers(t,e,r){let o,i,n,a=[],h=e.length;for(n=0;n<h;++n)o=e[n],s.warp(t,this.homography,o,r),s.threshold(this.homography,this.homography,s.otsu(this.homography)),i=this.getMarker(this.homography,o),i&&a.push(i);return a}getMarker(t,e){let r,o,i,n,h,d=t.width/7>>>0,l=d*d>>1,x=[],u=[],c=[];for(n=0;n<7;++n)for(i=0===n||6===n?1:6,h=0;h<7;h+=i)if(r={x:h*d,y:n*d,width:d,height:d},s.countNonZero(t,r)>l)return null;for(n=0;n<5;++n)for(x[n]=[],h=0;h<5;++h)r={x:(h+1)*d,y:(n+1)*d,width:d,height:d},x[n][h]=s.countNonZero(t,r)>l?1:0;for(u[0]=x,c[0]=this.hammingDistance(u[0]),o={first:c[0],second:0},n=1;n<4;++n)u[n]=this.rotate(u[n-1]),c[n]=this.hammingDistance(u[n]),c[n]<o.first&&(o.first=c[n],o.second=n);return 0!==o.first?null:new a(this.mat2id(u[o.second]),this.rotate2(e,4-o.second))}hammingDistance(t){let e,r,o,i,n,s=[[1,0,0,0,0],[1,0,1,1,1],[0,1,0,0,1],[0,1,1,1,0]],a=0;for(o=0;o<5;++o){for(r=1/0,i=0;i<4;++i){for(e=0,n=0;n<5;++n)e+=t[o][n]===s[i][n]?0:1;e<r&&(r=e)}a+=r}return a}mat2id(t){let e,r=0;for(e=0;e<5;++e)r<<=1,r|=t[e][1],r<<=1,r|=t[e][3];return r}rotate(t){let e,r,o=[],i=t.length;for(e=0;e<i;++e)for(o[e]=[],r=0;r<t[e].length;++r)o[e][r]=t[t[e].length-r-1][e];return o}rotate2=function(t,e){let r,o=[],i=t.length;for(r=0;r<i;++r)o[r]=t[(e+r)%i];return o}}return function(t){t.Image=i,t.grayscale=s.grayscale,t.threshold=s.threshold,t.adaptiveThreshold=s.adaptiveThreshold,t.otsu=s.otsu,t.stackBoxBlur=s.stackBoxBlur,t.gaussianBlur=s.gaussianBlur,t.findContours=s.findContours,t.approxPolyDP=s.approxPolyDP,t.warp=s.warp,t.getPerspectiveTransform=s.getPerspectiveTransform,t.isContourConvex=s.isContourConvex,t.perimeter=s.perimeter,t.minEdgeLength=s.minEdgeLength,t.countNonZero=s.countNonZero}(t||(t={})),function(t){t.Detector=h}(e||(e={})),o})()));