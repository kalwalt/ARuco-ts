!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var o in r)("object"==typeof exports?exports:t)[o]=r[o]}}(this,(()=>(()=>{"use strict";var t,e,r={d:(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};r.r(o),r.d(o,{ARuco:()=>e,CV:()=>t});class n{width;height;data;constructor(t=0,e=0,r=new Uint8ClampedArray(0)){this.width=t,this.height=e,this.data=r}}class i{color;next;constructor(){this.color=0,this.next=null}}class a{static grayscale(t,e){let r=t.data,o=e.data;o.length<=0&&(o=new Uint8ClampedArray(4*t.width*t.height));let n=r.length,i=0,a=0;for(;i<n;i+=4)o[a++]=.299*r[i]+.587*r[i+1]+.114*r[i+2]+.5&255;return new ImageData(o,t.width,t.height)}static threshold(t,e,r){let o,n=t.data,i=e.data,a=n.length,s=[];for(o=0;o<256;++o)s[o]=o<=r?0:255;for(o=0;o<a;++o)i[o]=s[n[o]];return new ImageData(i,t.width,t.height)}static adaptiveThreshold(t,e,r,o){let n,i=t.data,s=e.data,h=i.length,d=[];for(a.stackBoxBlur(t,e,r),n=0;n<768;++n)d[n]=n-255<=-o?255:0;for(n=0;n<h;++n)s[n]=d[i[n]-s[n]+255];return new ImageData(s,t.width,t.height)}static otsu(t){let e,r,o,n=t.data,i=n.length,a=[],s=0,h=0,d=0,l=0,x=0,u=0;for(o=0;o<256;++o)a[o]=0;for(o=0;o<i;++o)a[n[o]]++;for(o=0;o<256;++o)h+=a[o]*o;for(o=0;o<256;++o)if(l+=a[o],0!==l){if(x=i-l,0===x)break;d+=a[o]*o,e=d/l-(h-d)/x,r=l*x*e*e,r>u&&(u=r,s=o)}return s}static stackBoxBlurMult=[1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265];static stackBoxBlurShift=[0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13];static stackBoxBlur(t,e,r){let o,n,s,h,d,l,x,u,c,f,g=t.data,y=e.data,p=t.height,w=t.width,_=p-1,m=w-1,b=r+r+1,B=r+1,v=a.stackBoxBlurMult[r],C=a.stackBoxBlurShift[r];for(o=n=new i,f=1;f<b;++f)o=o.next=new i;for(o.next=n,d=0,c=0;c<p;++c){for(l=d,s=g[d],h=B*s,o=n,f=0;f<B;++f)o.color=s,o=o.next;for(f=1;f<B;++f)o.color=g[d+f],h+=o.color,o=o.next;for(o=n,u=0;u<w;++u)y[d++]=h*v>>>C,x=u+B,x=l+(x<m?x:m),h-=o.color-g[x],o.color=g[x],o=o.next}for(u=0;u<w;++u){for(d=u,l=d+w,s=y[d],h=B*s,o=n,f=0;f<B;++f)o.color=s,o=o.next;for(f=1;f<B;++f)o.color=y[l],h+=o.color,o=o.next,l+=w;for(o=n,c=0;c<p;++c)y[d]=h*v>>>C,x=c+B,x=u+(x<_?x:_)*w,h-=o.color-y[x],o.color=y[x],o=o.next,d+=w}return new ImageData(y,t.width,t.height)}static gaussianBlur(t,e,r,o){var n=a.gaussianKernel(o);return e=new ImageData(e.data,t.width,t.height),r=new ImageData(r.data,t.width,t.height),a.gaussianBlurFilter(t,r,n,!0),a.gaussianBlurFilter(r,e,n,!1),e}static gaussianBlurFilter(t,e,r,o){var n,i,a,s,h,d=t.data,l=e.data,x=t.height,u=t.width,c=0,f=r.length>>1;for(a=0;a<x;++a)for(s=0;s<u;++s){for(i=0,h=-f;h<=f;++h)o?(n=c+h,(s+h<0||s+h>=u)&&(n=c)):(n=c+h*u,(a+h<0||a+h>=x)&&(n=c)),i+=r[f+h]*d[n];l[c++]=o?i:i+.5&255}return e}static gaussianKernel(t){let e,r,o,n,i,a,s=[];if(t<=7&&t%2==1)s=[[1],[.25,.5,.25],[.0625,.25,.375,.25,.0625],[.03125,.109375,.21875,.28125,.21875,.109375,.03125]][t>>1];else{for(e=.5*(t-1),r=.8+.3*(e-1),o=-.5/(r*r),n=0,a=0;a<t;++a)i=a-e,n+=s[a]=Math.exp(o*i*i);for(n=1/n,a=0;a<t;++a)s[a]*=n}return s}static findContours(t,e){let r,o,n,i,s,h,d,l,x,u=t.width,c=t.height,f=[];for(r=a.binaryBorder(t,e),o=a.neighborhoodDeltas(u+2),n=u+3,s=1,l=0;l<c;++l,n+=2)for(x=0;x<u;++x,++n)i=r[n],0!==i&&(h=d=!1,1===i&&0===r[n-1]?h=!0:i>=1&&0===r[n+1]&&(d=!0),(h||d)&&(++s,f.push(a.borderFollowing(r,n,s,{x,y:l},d,o))));return f}static borderFollowing(t,e,r,o,n,i){let s,h,d,l,x,u,c=[];c.hole=n,l=x=n?0:4;do{if(l=l-1&7,s=e+i[l],0!==t[s])break}while(l!==x);if(l===x)t[e]=-r,c.push({x:o.x,y:o.y});else for(h=e,u=4^l;;){x=l;do{d=h+i[++l]}while(0===t[d]);if(l&=7,l-1>>>0<x>>>0?t[h]=-r:1===t[h]&&(t[h]=r),c.push({x:o.x,y:o.y}),u=l,o.x+=a.neighborhood[l][0],o.y+=a.neighborhood[l][1],d===e&&h===s)break;h=d,l=l+4&7}return c}static neighborhood=[[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1],[0,1],[1,1]];static neighborhoodDeltas(t){let e=[],r=a.neighborhood.length,o=0;for(;o<r;++o)e[o]=a.neighborhood[o][0]+a.neighborhood[o][1]*t;return e.concat(e)}static approxPolyDP(t,e){let r,o,n,i,a,s,h,d,l,x,u,c={start_index:0,end_index:0},f={start_index:0,end_index:0},g=[],y=[],p=t.length;for(e*=e,u=0,l=0;l<3;++l)for(a=0,u=(u+f.start_index)%p,o=t[u],++u===p&&(u=0),x=1;x<p;++x)r=t[u],++u===p&&(u=0),h=r.x-o.x,d=r.y-o.y,i=h*h+d*d,i>a&&(a=i,f.start_index=x);for(a<=e?g.push({x:o.x,y:o.y}):(c.start_index=u,c.end_index=f.start_index+=c.start_index,f.start_index-=f.start_index>=p?p:0,f.end_index=c.start_index,f.end_index<f.start_index&&(f.end_index+=p),y.push({start_index:f.start_index,end_index:f.end_index}),y.push({start_index:c.start_index,end_index:c.end_index}));0!==y.length;){if(c=y.pop(),n=t[c.end_index%p],o=t[u=c.start_index%p],++u===p&&(u=0),c.end_index<=c.start_index+1)s=!0;else{for(a=0,h=n.x-o.x,d=n.y-o.y,l=c.start_index+1;l<c.end_index;++l)r=t[u],++u===p&&(u=0),i=Math.abs((r.y-o.y)*h-(r.x-o.x)*d),i>a&&(a=i,f.start_index=l);s=a*a<=e*(h*h+d*d)}s?g.push({x:o.x,y:o.y}):(f.end_index=c.end_index,c.end_index=f.start_index,y.push({start_index:f.start_index,end_index:f.end_index}),y.push({start_index:c.start_index,end_index:c.end_index}))}return g}static warp(t,e,r,o){var n,i,s,h,d,l,x,u,c,f,g,y,p,w,_,m,b,B,v,C,k,D,P=t.data,M=e.data,T=t.width,N=t.height,I=0;for(p=(y=a.getPerspectiveTransform(r,o-1))[8],w=y[2],_=y[5],k=0;k<o;++k)for(m=p+=y[7],b=w+=y[1],B=_+=y[4],D=0;D<o;++D)m+=y[6],i=(n=(v=(b+=y[0])/m)>>>0)==T-1?n:n+1,h=1-(s=v-n),x=1-(l=(C=(B+=y[3])/m)-(d=C>>>0)),u=c=d*T,f=g=(d===N-1?d:d+1)*T,M[I++]=x*(h*P[u+n]+s*P[c+i])+l*(h*P[f+n]+s*P[g+i])&255;return new ImageData(M,o,o)}static getPerspectiveTransform(t,e){let r=a.square2quad(t);return r[0]/=e,r[1]/=e,r[3]/=e,r[4]/=e,r[6]/=e,r[7]/=e,r}static square2quad(t){let e,r,o,n,i,a,s,h=[];return e=t[0].x-t[1].x+t[2].x-t[3].x,r=t[0].y-t[1].y+t[2].y-t[3].y,0===e&&0===r?(h[0]=t[1].x-t[0].x,h[1]=t[2].x-t[1].x,h[2]=t[0].x,h[3]=t[1].y-t[0].y,h[4]=t[2].y-t[1].y,h[5]=t[0].y,h[6]=0,h[7]=0,h[8]=1):(o=t[1].x-t[2].x,n=t[3].x-t[2].x,i=t[1].y-t[2].y,a=t[3].y-t[2].y,s=o*a-n*i,h[6]=(e*a-n*r)/s,h[7]=(o*r-e*i)/s,h[8]=1,h[0]=t[1].x-t[0].x+h[6]*t[1].x,h[1]=t[3].x-t[0].x+h[7]*t[3].x,h[2]=t[0].x,h[3]=t[1].y-t[0].y+h[6]*t[1].y,h[4]=t[3].y-t[0].y+h[7]*t[3].y,h[5]=t[0].y),h}static isContourConvex(t){let e,r,o,n,i,a,s,h,d=0,l=!0,x=t.length,u=0,c=0;for(r=t[x-1],e=t[0],i=e.x-r.x,a=e.y-r.y;u<x;++u){if(++c===x&&(c=0),r=e,e=t[c],s=e.x-r.x,h=e.y-r.y,o=s*a,n=h*i,d|=n>o?1:n<o?2:3,3===d){l=!1;break}i=s,a=h}return l}static perimeter(t){let e,r,o=t.length,n=0,i=o-1,a=0;for(;n<o;i=n++)e=t[n].x-t[i].x,r=t[n].y-t[i].y,a+=Math.sqrt(e*e+r*r);return a}static minEdgeLength(t){let e,r,o,n=t.length,i=0,a=n-1,s=1/0;for(;i<n;a=i++)r=t[i].x-t[a].x,o=t[i].y-t[a].y,e=r*r+o*o,e<s&&(s=e);return Math.sqrt(s)}static countNonZero(t,e){let r,o,n=t.data,i=e.height,a=e.width,s=e.x+e.y*t.width,h=t.width-a,d=0;for(r=0;r<i;++r){for(o=0;o<a;++o)0!==n[s++]&&++d;s+=h}return d}static binaryBorder(t,e){let r,o,n=t.data,i=t.height,a=t.width,s=0,h=0;for(o=-2;o<a;++o)e[h++]=0;for(r=0;r<i;++r){for(e[h++]=0,o=0;o<a;++o)e[h++]=0===n[s++]?0:1;e[h++]=0}for(o=-2;o<a;++o)e[h++]=0;return e}}class s{id;corners;constructor(t,e){this.id=t,this.corners=e}}class h{grey;thres;homography;binary;contours;polys;candidates;constructor(){this.grey=new n,this.thres=new n,this.homography=new n,this.binary=[],this.contours=[],this.polys=[],this.candidates=[]}detect(t){return a.grayscale(t,this.grey),a.adaptiveThreshold(this.grey,this.thres,2,7),this.contours=a.findContours(this.thres,this.binary),this.candidates=this.findCandidates(this.contours,.2*t.width,.05,10),this.candidates=this.clockwiseCorners(this.candidates),this.candidates=this.notTooNear(this.candidates,10),this.findMarkers(this.grey,this.candidates,49)}findCandidates(t,e,r,o){let n,i,s,h=[],d=t.length;for(this.polys=[],s=0;s<d;++s)n=t[s],n.length>=e&&(i=a.approxPolyDP(n,n.length*r),this.polys.push(i),4===i.length&&a.isContourConvex(i)&&a.minEdgeLength(i)>=o&&h.push(i));return h}clockwiseCorners(t){let e,r,o,n,i,a,s=t.length;for(a=0;a<s;++a)e=t[a][1].x-t[a][0].x,o=t[a][1].y-t[a][0].y,r=t[a][2].x-t[a][0].x,n=t[a][2].y-t[a][0].y,e*n-o*r<0&&(i=t[a][1],t[a][1]=t[a][3],t[a][3]=i);return t}notTooNear(t,e){let r,o,n,i,s,h,d=[],l=t.length;for(i=0;i<l;++i)for(s=i+1;s<l;++s){for(r=0,h=0;h<4;++h)o=t[i][h].x-t[s][h].x,n=t[i][h].y-t[s][h].y,r+=o*o+n*n;r/4<e*e&&(a.perimeter(t[i])<a.perimeter(t[s])?t[i].tooNear=!0:t[s].tooNear=!0)}for(i=0;i<l;++i)t[i].tooNear||d.push(t[i]);return d}findMarkers(t,e,r){let o,n,i,s=[],h=e.length;for(i=0;i<h;++i)o=e[i],a.warp(t,this.homography,o,r),a.threshold(this.homography,this.homography,a.otsu(this.homography)),n=this.getMarker(this.homography,o),n&&s.push(n);return s}getMarker(t,e){let r,o,n,i,h,d=t.width/7>>>0,l=d*d>>1,x=[],u=[],c=[];for(i=0;i<7;++i)for(n=0===i||6===i?1:6,h=0;h<7;h+=n)if(r={x:h*d,y:i*d,width:d,height:d},a.countNonZero(t,r)>l)return null;for(i=0;i<5;++i)for(x[i]=[],h=0;h<5;++h)r={x:(h+1)*d,y:(i+1)*d,width:d,height:d},x[i][h]=a.countNonZero(t,r)>l?1:0;for(u[0]=x,c[0]=this.hammingDistance(u[0]),o={first:c[0],second:0},i=1;i<4;++i)u[i]=this.rotate(u[i-1]),c[i]=this.hammingDistance(u[i]),c[i]<o.first&&(o.first=c[i],o.second=i);return 0!==o.first?null:new s(this.mat2id(u[o.second]),this.rotate2(e,4-o.second))}hammingDistance(t){let e,r,o,n,i,a=[[1,0,0,0,0],[1,0,1,1,1],[0,1,0,0,1],[0,1,1,1,0]],s=0;for(o=0;o<5;++o){for(r=1/0,n=0;n<4;++n){for(e=0,i=0;i<5;++i)e+=t[o][i]===a[n][i]?0:1;e<r&&(r=e)}s+=r}return s}mat2id(t){let e,r=0;for(e=0;e<5;++e)r<<=1,r|=t[e][1],r<<=1,r|=t[e][3];return r}rotate(t){let e,r,o=[],n=t.length;for(e=0;e<n;++e)for(o[e]=[],r=0;r<t[e].length;++r)o[e][r]=t[t[e].length-r-1][e];return o}rotate2=function(t,e){let r,o=[],n=t.length;for(r=0;r<n;++r)o[r]=t[(e+r)%n];return o}}return function(t){t.Image=n,t.grayscale=a.grayscale,t.threshold=a.threshold,t.adaptiveThreshold=a.adaptiveThreshold,t.otsu=a.otsu,t.stackBoxBlur=a.stackBoxBlur,t.gaussianBlur=a.gaussianBlur,t.findContours=a.findContours,t.approxPolyDP=a.approxPolyDP,t.warp=a.warp,t.getPerspectiveTransform=a.getPerspectiveTransform,t.isContourConvex=a.isContourConvex,t.perimeter=a.perimeter,t.minEdgeLength=a.minEdgeLength,t.countNonZero=a.countNonZero}(t||(t={})),function(t){t.Detector=h}(e||(e={})),o})()));